// <auto-generated />
using System;
using DbModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace pretdiskuriro.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221227142831_xd")]
    partial class xd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("DbModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DbModels.DailyPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("MarketProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MarketProductMarketId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MarketProductProductId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("MarketProductMarketId", "MarketProductProductId");

                    b.ToTable("DailyPrices");
                });

            modelBuilder.Entity("DbModels.Market", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("DbModels.MarketProduct", b =>
                {
                    b.Property<int>("MarketId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("MarketId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("MarketProducts");
                });

            modelBuilder.Entity("DbModels.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DbModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("isConfirmedEmail")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DbModels.Category", b =>
                {
                    b.HasOne("DbModels.Product", "Product")
                        .WithOne("Category")
                        .HasForeignKey("DbModels.Category", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DbModels.DailyPrice", b =>
                {
                    b.HasOne("DbModels.MarketProduct", "MarketProduct")
                        .WithMany("Prices")
                        .HasForeignKey("MarketProductMarketId", "MarketProductProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MarketProduct");
                });

            modelBuilder.Entity("DbModels.MarketProduct", b =>
                {
                    b.HasOne("DbModels.Market", "Market")
                        .WithMany("MarketProducts")
                        .HasForeignKey("MarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbModels.Product", "Product")
                        .WithMany("MarketProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Market");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DbModels.Market", b =>
                {
                    b.Navigation("MarketProducts");
                });

            modelBuilder.Entity("DbModels.MarketProduct", b =>
                {
                    b.Navigation("Prices");
                });

            modelBuilder.Entity("DbModels.Product", b =>
                {
                    b.Navigation("Category")
                        .IsRequired();

                    b.Navigation("MarketProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
